#include <stdlib.h>
#include <stdio.h>
#include <limits.h>
/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* parameter types of getbits function are integers x,p and n.
* The function output is the number of bits after the algorithm.
* Function returns int.
* The function records from intput, passes the data in each
* valid record to getbits and displays the reult
* Function algorithm : (x >> (p+1-n)) & ~(~0 << n)
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
unsigned int  getbits(int x, int p, int n)
{
  int result;
  
  return (x >> (p + 1 - n)) & ~(~0 << n);
}
int digit,digitLine,p,n,j,flag;
long int x;
int flag = 1;
int main(void)
{
  
  while ((scanf("%ld:%d:%d",&x,&p,&n)) != EOF)
    {
      if (p + 1 - n < 0)
{
  printf("Error: too many bits requested from position\n");
  flag = 0;
 
}
      if ( x - 4294967295 > 0 )
{
  printf("Error: value out of range\n");
  flag = 0;
}
      if ( p >= 32 )
{
  printf("Error: position out of range\n");
  flag = 0;
}
      if (n >= 32)
{
  printf("Error: number of bits out of range\n");
  flag = 0;
}
      
      if (flag == 1)
{
  int z = getbits((unsigned int)x,p,n);
  printf("getbits(x=%ld, p=%d, n=%d) = %d\n",x,p,n,z);
}
      flag = 1;
    }
    return 0;
}
